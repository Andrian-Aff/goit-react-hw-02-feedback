{"version":3,"sources":["Components/Statistics/Statisticts.js","Components/FeedBackOptions/FeedBackOptions.js","Components/Section/Section.js","Notification.js","App.js","index.js","Components/Section/Section.module.css"],"names":["Statisticts","good","neutral","bad","total","positivePercentage","FeedBackOptions","onLeaveFeedback","Section","title","children","className","styles","container","Notification","message","App","state","onButtonClick","setState","prevState","this","isVisible","Object","values","reduce","acc","el","options","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAAe,SAASA,EAAT,GAMX,IAAD,IALDC,YAKC,MALM,EAKN,MAJDC,eAIC,MAJS,EAIT,MAHDC,WAGC,MAHK,EAGL,MAFDC,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UCXS,SAASC,EAAT,EAEbC,GACA,EAFEN,KAEF,EAFQC,QAER,EAFiBC,I,oBCAJ,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACGJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,KCPQ,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,mCACE,mBAAGJ,UAAU,UAAb,SAAwBI,M,ICKxBC,E,4MACJC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BnB,KAAMmB,EAAUnB,KAAO,O,wDAI3B,c,6CAEA,c,6BAEA,c,oBAEA,WACE,MAA+BoB,KAAKJ,MAA5BhB,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACboB,IAAYC,OAAOC,OAAOH,KAAKJ,OAAOQ,QAC1C,SAACC,EAAKC,GAAN,OAAcA,EAAKD,EAAM,EAAIA,IAC7B,GAKF,OACE,eAAClB,EAAD,CAASC,MAAO,wBAAhB,UACE,cAACH,EAAD,CACEsB,QAASL,OAAOM,KAAKR,KAAKJ,OAC1BV,gBAAiBc,KAAKd,kBAEvBe,EACC,cAACR,EAAD,CAAcC,QAAQ,sBAEtB,cAACf,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,KAAKS,qBACZzB,mBAAoBgB,KAAKU,2C,GA1CnBC,aAkDHhB,ICrDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.d251a387.chunk.js","sourcesContent":["export default function Statisticts({\n  good = 0,\n  neutral = 0,\n  bad = 0,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function FeedBackOptions(\n  { good, neutral, bad },\n  onLeaveFeedback,\n) {\n  <div>\n    <button type=\"button\" className=\"button\" onClick={() => onLeaveFeedback()}>\n      Good\n    </button>\n    <button type=\"button\" className=\"button\" onClick={() => onLeaveFeedback()}>\n      Neutral\n    </button>\n    <button type=\"button\" className=\"button\" onClick={() => onLeaveFeedback()}>\n      Bad\n    </button>\n  </div>;\n}\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={styles.container}>\n      {title && <h3 className={styles.title}>{title}</h3>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","export default function Notification({ message }) {\n  return (\n    <>\n      <p className=\"message\">{message}</p>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Statisticts from './Components/Statistics';\nimport FeedBackOptions from './Components/FeedBackOptions';\nimport Section from './Components/Section';\nimport Notification from './Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onButtonClick = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  countTotalFeedback() {}\n\n  countPositiveFeedbackPercentage() {}\n\n  onLeaveFeedback() {}\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const isVisible = Object.values(this.state).reduce(\n      (acc, el) => (el ? acc + 1 : acc),\n      0,\n    )\n      ? true\n      : false;\n\n    return (\n      <Section title={'Please leave feedback'}>\n        <FeedBackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n        {isVisible ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statisticts\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3fEVL\"};"],"sourceRoot":""}