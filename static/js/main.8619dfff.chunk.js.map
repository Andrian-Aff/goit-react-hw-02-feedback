{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/Button/Button.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css","Components/Section/Section.js","Components/Statistics/Statisticts.js","Components/Button/Button.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Statistics","good","neutral","bad","total","positivePercentage","statistics","list","item","value","isNaN","massage","Button","textBtn","onLeaveFeedback","button","type","onClick","FeedbackOptions","options","buttonsBox","map","Notification","message","App","state","addFeedback","e","target","textContent","toLowerCase","setState","prevState","Object","values","this","reduce","acc","val","goodAndBad","Math","round","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8619dfff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QpH4\",\"title\":\"Statistics_title__2MUEb\",\"item\":\"Statistics_item__3A7a3\",\"value\":\"Statistics_value__1JjE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3fEVL\",\"title\":\"Section_title__2vES4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button___W0ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBox\":\"FeedbackOptions_buttonsBox__1fehO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2YxHF\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h3 className={s.title}>{title}</h3>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={s.statistics}>\n      <h3 className={s.title}> Statistics </h3>\n      <ul className={s.list}>\n        <li className={s.item}>\n          Good:\n          <span className={s.value}>{good}</span>\n        </li>\n        <li className={s.item}>\n          Neutral:\n          <span className={s.value}>{neutral}</span>\n        </li>\n        <li className={s.item}>\n          Bad:\n          <span className={s.value}>{bad}</span>\n        </li>\n        <li className={s.item}>\n          Total:\n          <span className={s.value}>{total}</span>\n        </li>\n        <li className={s.item}>\n          Positive feedback:\n          <span className={s.value}>\n            {isNaN(positivePercentage) ? 0 : positivePercentage}%\n          </span>\n        </li>\n      </ul>\n      <p className={s.massage}></p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ textBtn, onLeaveFeedback }) {\n  return (\n    <button\n      className={`${s.button}`}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      {textBtn}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  textBtn: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Button from '../Button';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.buttonsBox}>\n      {options.map(textBtn => (\n        <Button\n          key={textBtn}\n          textBtn={textBtn}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return (\n    <>\n      <p className={s.message}>{message}</p>\n    </>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport Section from './Components/Section';\nimport Statistics from './Components/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Notification from './Components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = e => {\n    const value = e.target.textContent.toLowerCase();\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, val) => {\n      return acc + val;\n    }, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const goodAndBad = this.state.good + this.state.bad;\n    return Math.round((100 * this.state.good) / goodAndBad);\n    // return ((this.state.good / this.countTotalFeedback()) * 100) - Если учитывать нейтральные отзывы.\n  }\n\n  render() {\n    const { good, bad, neutral } = this.state;\n\n    return (\n      <Section title='Please leave feedback'>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.addFeedback}\n        />\n\n        {this.countTotalFeedback()? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message='No feedback given'/>\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}